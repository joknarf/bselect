
function ctrl_c {
  stty $_stty_ori
  read selected <<<"" # do a read or tty echo broken
  tput ed #clear below
  tput cnorm
  unset _items
  printf "\e[0;91mx \e[0m\e[1;77m%s\e[0m" aborted
  tput el
  echo
  exit
}

_gomenu() {
  typeset nbitems=$2 size i mov="tput cuu1"
  [ "$1" = bottom ] && mov="echo"
  size=$((nbitems+2))
  [ "$size" -gt $LINES ] && size=$LINES
  # back to top of menu
  for ((i=1;i<size;i++));do
    $mov
  done
  printf "\r" # begin of line
}

_showmenu() {
  typeset title="$1" subtitle="$2" nsel="$3" nbitems="$4" filter="$5" item i min max

  [ "$title" ] && printf "\e[0;92mâœ“ \e[0m\e[1;77m%s\e[0;96m  %s\e[0m" "$title ($nbitems)"
  tput el
  min=$(($nsel-$LINES+3))
  [ "$min" -le 0 ] && min=1
  max=$(($min+$LINES-3))
  i=0
  while read item
  do
    i=$((i + 1))
    [[ $i -ge $min ]] || continue
    [[ $i -le $max ]] || break
    if [[ $nsel == "$i" ]]; then 
      printf "\n\e[1;96m> %s\e[0m" "$i: $item"
    else
      printf "\n  %s" "$i: $item"
    fi
    tput el #clear end of line
  done <<<"$_items"
  printf "\n$subtitle: %s" "$filter"
  tput el
  _gomenu top $nbitems
}

_domenu () {
  typeset title="$1" subtitle="$2" filter="" nsel=1 nbitems
  
  [ "$_items" ] || return 1
  _stty_ori=$(stty -g)
  stty -echo
  nbitems=$(($(echo "$_items"|wc -l) + 0))
  : ${LINES:=$(tput lines)}
  _showmenu "$1" "$2" "$nsel" "$nbitems" ""
  while true
  do
    IFS= read -sn1 k
    case $k in
      $'\x1b')
          read -sn2 -t1 k
          case $k in 
            '[A') #up
              [ $nsel != 1 ] && nsel=$((nsel - 1)) && \
              _showmenu "$1" "$2" "$nsel" "$nbitems" "$filter" </dev/null;;
            '[B') #down
              filter="";[ $nsel != $nbitems ] && nsel=$((nsel + 1)) && \
              _showmenu "$1" "$2" "$nsel" "$nbitems" "$filter" </dev/null;;
          esac;;
      $'\x7f') #backspace
        filter=${filter%?}
        _showmenu "$1" "$2" "$nsel" "$nbitems" "$filter";;
      $'\x0d'|'') #enter
        echo "=>$k<=" >>/tmp/o
        tput ed
        [ "$filter" ] && nsel=""
        [[ "$filter" =~ ^[0-9]+$ ]] && nsel=$filter || selected=$(echo "$_items" |egrep "$filter")
        [ "$nsel" ] && selected=$(echo "$_items" |awk NR==$nsel)
        [ ! "$selected" ] && printf "\n\e[0;91mx \e[0m\e[1;77m%-$((COLUMS-3))s\e[0m" "Not Found" && break
        [[ "$selected" != *$'\n'* ]] && break
        _items="$selected"
        selected=""
        nbitems=$(echo "$_items" |wc -l)
        nsel=1
        filter=""
        _showmenu "$1" "$2" "$nsel" "$nbitems" "$filter";;
      [[:graph:]]|" ") #text [a-zA-Z0-9/_?*\(\)\ .-]) 
        filter="$filter$k"
        _gomenu bottom $nbitems
        printf "$subtitle: %s" "$filter"
        tput el
        _gomenu top $nbitems
#        _showmenu "$1" "$2" "$nsel" "$nbitems" "$filter";;
    esac
  done
  stty $_stty_ori
  tput cnorm
}

bselect() {
  typeset title subtitle

  selected=""
  while [ $# -gt 0 ]; do
    case "$1" in
      -t|--title)
        shift
        [ "$1" ] && title=$1 || return 1
        shift
        ;;
      -s|--subtitle)
        shift
        [ "$1" ] && subtitle=$1 || return 1
        shift
        ;;
      -i|--items)
        shift
        [ "$1" ] && _items="$1" || return 1
        shift
        ;;
      *)
        printf "usage: bselect [-t <title>] [-s <subtitle>] -i <items>\n"
        printf "args :\n"
        printf "-t, --title           menu title\n"
        printf "-s, --subtitle        subtitle\n"
        printf "-i, --items           menu items \\n separated\n"
        return 1
        ;;
    esac
  done
  trap ctrl_c INT
  tput civis #hide cursor
  _domenu "$title" "$subtitle"
  unset _items
  trap - INT
}
