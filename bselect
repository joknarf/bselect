#!/bin/bash

function ctrl_c {
  tput ich 16
  printf "(Ctl-X to exit)\r"
  return 0
}

_showmenu() {
  typeset prompt="$1" nsel="$2" nbitems="$3" filter="$4" item i min max

  printf "$prompt ($nbitems): %s" "$filter"
  tput el
  w=$nbitems;w=${#w}
  min=$(($nsel-$LINES+2))
  [ "$min" -le 0 ] && min=1
  max=$(($min+$LINES-2))
  i=0
  while read item
  do
    i=$((i + 1))
    [[ $i -ge $min ]] || continue
    [[ $i -le $max ]] || break
    if [[ $nsel == "$i" ]]; then 
      printf "\n\e[1;96m> %${w}s: %s\e[0m" $i "$item"
    else
      printf "\n\e[32m  %${w}s: \e[94m%s\e[0m" $i "$item"
    fi
    tput el #clear end of line
  done <<<"$_items"
  size=$((nbitems+1))
  [ "$size" -gt $LINES ] && size=$LINES
  # back to top of menu
  for ((i=1;i<size;i++));do
    tput cuu1
  done
  printf "\r" # begin of line
}

_domenu () {
  typeset prompt="$1" filter="" nsel=1 nbitems o=n
  [ "$ZSH_VERSION" ] && o=k
  [ "$_items" ] || return 1
  tput civis
  stty -echo
  printf "\e[?7l"
  nbitems=$(($(echo "$_items"|wc -l) + 0))
  : ${LINES:=$(tput lines)}
  _showmenu "$1" "$nsel" "$nbitems" ""
  while true
  do
    IFS= read -s${o}1 k
    case $k in
      $'\x1b')
          read -s${o}2 -t1 k
          case $k in 
            '[A') #up
              filter="";[ $nsel != 1 ] && nsel=$((nsel - 1)) && \
              _showmenu "$1" "$nsel" "$nbitems" "$filter";;
            '[B') #down
              filter="";[ $nsel != $nbitems ] && nsel=$((nsel + 1)) && \
              _showmenu "$1" "$nsel" "$nbitems" "$filter";;
            *) tput ed;break;;
          esac;;
      $'\x7f') #backspace
        filter=${filter%?}
        printf "$prompt ($nbitems): %s" "$filter"
        tput el
        printf "\r"
        ;;
      [[:graph:]]|" ") #text [a-zA-Z0-9/_?*\(\)\ .-]) 
        filter="$filter$k"
        printf "$prompt ($nbitems): %s" "$filter"
        tput el
        printf "\r"
        ;;
      $'\x06') echo "Ctl F";;
      $'\x0d'|''|$'\n') #enter
        tput ed
        [ "$filter" ] && nsel=""
        [[ "$filter" =~ ^[0-9]+$ ]] && nsel=$filter || selected=$(echo "$_items" |egrep "$filter")
        [ "$nsel" ] && selected=$(echo "$_items" |awk NR==$nsel)
        [ ! "$selected" ] && printf "\n\e[0;91mx \e[0m\e[1;77m%-$((COLUMS-3))s\e[0m" "Not Found" && break
        [[ "$selected" != *$'\n'* ]] && break
        _items="$selected"
        selected=""
        nbitems=$(($(echo "$_items"|wc -l) + 0))
        nsel=1
        filter=""
        _showmenu "$1" "$nsel" "$nbitems" "$filter";;
      *) tput ed;break;
    esac
  done
  tput cnorm
}

bselect() {
  typeset prompt

  prompt="select"
  selected=""
  while [ $# -gt 0 ]; do
    case "$1" in
      -p|--prompt)
        [ "$2" ] && prompt=$2 || return 1
        ;;
      -i|--items)
        [ "$2" ] && _items="$2" || return 1
         ;;
      -f|--file)
        [ "$2" ] && _items="$(cat $2)" || return 1
         ;;
      *)
        printf "usage: bselect [-p <prompt>] -i <items>|-f <itemfile>\n"
        printf "args :\n"
        printf "%s\n" "  -p, --prompt          menu prompt"
        printf "%s\n" "  -i, --items           menu items \n separated"
        printf "%s\n" "  -f, --file            file with items"
        return 1
        ;;
    esac
    shift 2
  done
  _stty_ori=$(stty -g)
  trap ctrl_c INT
  _domenu "$prompt" >&2
  trap - INT
  stty $_stty_ori
  unset _items
  [ "$selected" ] && printf "$selected" && return 0
  return 1
}

[ "$1" ] && bselect "$@"
